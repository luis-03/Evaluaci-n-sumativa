library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
entity ejercicio4 is
    Port ( tiempo,sensor,clk,sp : in  STD_LOGIC;
				p1,p2,p3: inout std_logic_vector(3 downto 0);
           PA,PC,CONTEO,AVANCE : out  STD_LOGIC;
           Q1,Q0 : inout  STD_LOGIC);
end ejercicio4;
architecture Behavioral of ejercicio4 is
	type estados is (A, B, C, D);
	signal edo_pres, edo_fut: estados;
begin
	p_estados: process (edo_pres, tiempo, sensor, sp,p1,p2,p3)
	begin
	case edo_pres is
	when A => PA <= '1' ; PC <= '0'; CONTEO <= '0'; AVANCE <= '0'; Q1<='0'; Q0<='0';
		if (sensor = '1' and p1="1010") then
		edo_fut <= B;
		else
		p1<= p1+ "0001";
		edo_fut <= A;
		end if;
	when B => PA <= '0' ; PC <= '1'; CONTEO <= '0'; AVANCE <= '0'; Q1<='0'; Q0<='1';
		if (sensor = '1' and p2="1010")then
		edo_fut <= C;
		else
		p2<=p2+ "0001";
		edo_fut <= B;
		end if;
	when C => PA <= '0' ; PC <= '0'; CONTEO <= '0'; AVANCE <= '1'; Q1<='1'; Q0<='0';
		if (sensor = '1' and p3="1010") then
		edo_fut <= D;
		else
		p3<= p3 + "0001";
		edo_fut <= C;
		end if;
	when D => PA <= '0' ; PC <= '1'; CONTEO <= '0'; AVANCE <= '0'; Q1<='1'; Q0<='1';
		edo_fut <= A;
	end case;
end process p_estados;
----inicia segundo proceso
p_relol: process (clk) begin
	if (clk'event and clk='1') then
		edo_pres <= edo_fut;
	end if;
end process p_relol; 
end Behavioral;
